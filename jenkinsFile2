pipeline {
    agent any
    environment {
        DOCKERHUB_CREDENTIALS = credentials('Docker-ID')
        FRONTEND_IMAGE = "maryam2904/project2023-frontend"
        BACKEND_IMAGE = "maryam2904/project2023-backend"
        DOCKER_TAG = "${BUILD_NUMBER}"
    }
    
    stages {
        stage('Checkout') {
            steps {
                script {
                    // Checkout main branch (frontend)
                    checkout scm
                    
                    // Create and checkout backend directory
                    sh 'mkdir -p backend'
                    dir('backend') {
                        git url: 'https://github.com/maryem012/PROJECT2023.git', branch: 'backend'
                    }
                }
            }
        }
        
        stage('Build Frontend') {
            steps {
                sh '''
                    npm install --legacy-peer-deps
                    npm run build
                '''
            }
        }
        
        stage('Build Backend') {
            steps {
                dir('backend') {
                    sh '''
                        npm install
                        npm run build
                    '''
                }
            }
        }
        
        stage('Docker Build & Push') {
            steps {
                script {
                    // Frontend
                    sh """
                        docker build -t ${FRONTEND_IMAGE}:${DOCKER_TAG} .
                        docker tag ${FRONTEND_IMAGE}:${DOCKER_TAG} ${FRONTEND_IMAGE}:latest
                    """
                    
                    // Backend
                    dir('backend') {
                        sh """
                            docker build -t ${BACKEND_IMAGE}:${DOCKER_TAG} .
                            docker tag ${BACKEND_IMAGE}:${DOCKER_TAG} ${BACKEND_IMAGE}:latest
                        """
                    }
                    
                    // Login and Push
                    withCredentials([usernamePassword(credentialsId: 'Docker-ID', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        sh """
                            echo '$DOCKER_PASSWORD' | docker login -u '$DOCKER_USERNAME' --password-stdin
                            docker push ${FRONTEND_IMAGE}:${DOCKER_TAG}
                            docker push ${FRONTEND_IMAGE}:latest
                            docker push ${BACKEND_IMAGE}:${DOCKER_TAG}
                            docker push ${BACKEND_IMAGE}:latest
                        """
                    }
                }
            }
        }
    }
    
    post {
        always {
            sh 'docker logout'
            cleanWs()
        }
    }
}
